#!/bin/bash

# Fonction pour demander une confirmation √† l'utilisateur
confirm() {
    while true; do
        read -rp "$1 (y/n): " response
        case "$response" in
            [Yy]*) return 0 ;;  # Continuer si "y"
            [Nn]*) return 1 ;;  # Arr√™ter si "n"
            *) echo "Veuillez r√©pondre par 'y' ou 'n'." ;;
        esac
    done
}
# source l'env python
. .venv/bin/activate

# export le PYTHONPATH
export PYTHONPATH=$PYTHONPATH:`pwd`


# Supprimer le fichier dvc.lock si confirm√©
if confirm "Voulez-vous supprimer le fichier dvc.lock pour forcer une reconstruction compl√®te ?"; then
    rm -rf dvc.lock
    echo "‚úîÔ∏è Fichier dvc.lock supprim√©."
else
    echo "‚è© Suppression de dvc.lock ignor√©e."
fi

# Forcer la reconstruction des pipelines DVC
if confirm "Souhaitez-vous ex√©cuter 'dvc repro --force' pour forcer la reconstruction des pipelines ?"; then
    dvc repro --force
    echo "‚úîÔ∏è Reconstruction des pipelines DVC termin√©e."
else
    echo "‚è© Reconstruction des pipelines DVC ignor√©e."
fi

# Reconstruire les images Docker sans cache
if confirm "Voulez-vous reconstruire les images Docker en ignorant le cache ?"; then
    docker compose -f docker-compose-appli.yml build --no-cache
    echo "‚úîÔ∏è Images Docker reconstruites sans cache."
else
    echo "‚è© Reconstruction des images Docker ignor√©e."
fi

# D√©marrer les conteneurs Docker
if confirm "Souhaitez-vous d√©marrer les conteneurs Docker en mode d√©tach√© ?"; then
    docker compose -f docker-compose-appli.yml up -d
    echo "‚úîÔ∏è Conteneurs Docker d√©marr√©s."
else
    echo "‚è© D√©marrage des conteneurs Docker ignor√©."
fi

# Fin du script
echo "üöÄ Processus termin√©. l'aaplication ecoute sur http://127.0.0.1:7000"


