#!/bin/bash

# Arr√™ter le script en cas d'erreur
set -e

# Fonction pour demander une confirmation √† l'utilisateur
confirm() {
    while true; do
        read -rp "$1 (y/n): " response
        case "$response" in
            [Yy]*) return 0 ;;  # Continuer si "y"
            [Nn]*) return 1 ;;  # Arr√™ter si "n"
            *) echo "Veuillez r√©pondre par 'y' ou 'n'." ;;
        esac
    done
}

echo "----------------------------------------"
echo "üöÄ Initialisation du projet"
echo "----------------------------------------"



# Demander si l'utilisateur souhaite supprimer les r√©pertoires existants
if confirm "Voulez-vous supprimer les r√©pertoires existants (./logs, ./bdd, ./datasets, ./mlruns, ./plugins .venv) ?"; then
    echo "üóëÔ∏è Arret des dockers..."
    docker compose down
    docker compose -f docker-compose-appli.yml down
    echo "üóëÔ∏è Suppression des anciens r√©pertoires..."
    sudo rm -rf ./logs ./bdd ./datasets ./mlruns ./plugins .venv/
    echo "‚úÖ R√©pertoires supprim√©s."
else
    echo "‚è© Suppression des r√©pertoires ignor√©e."
fi

# Cr√©ation des r√©pertoires n√©cessaires
if confirm "Souhaitez-vous cr√©er les r√©pertoires n√©cessaires (logs, bdd, datasets, etc.) ?"; then
    echo "üìÇ Cr√©ation des r√©pertoires..."
    mkdir -p ./logs ./bdd ./datasets/raw_files/ ./mlruns ./plugins
    chmod 777 ./logs ./bdd ./datasets ./mlruns ./plugins
    echo "‚úÖ R√©pertoires cr√©√©s et droits appliqu√©s."
else
    echo "‚è© Cr√©ation des r√©pertoires ignor√©e."
fi

echo "----------------------------------------"
echo "üêç Installation et activation de l'environnement Python"
echo "----------------------------------------"

# Cr√©ation de l'environnement virtuel
if confirm "Voulez-vous v√©rifier ou cr√©er un environnement virtuel Python ?"; then
    if [ ! -d ".venv" ]; then
        python3 -m venv .venv
        echo "‚úÖ Environnement Python cr√©√©."
    else
        echo "‚ö†Ô∏è L'environnement Python existe d√©j√†."
    fi
else
    echo "‚è© Cr√©ation de l'environnement virtuel ignor√©e."
fi

# Activer l'environnement virtuel
if confirm "Souhaitez-vous activer l'environnement Python ?"; then
    . .venv/bin/activate
    echo "‚úÖ Environnement Python activ√©."
else
    echo "‚è© Activation de l'environnement virtuel ignor√©e."
fi

# Installer les d√©pendances
if confirm "Voulez-vous installer les d√©pendances √† partir de requirements.txt ?"; then
    if [ -f "requirements.txt" ]; then
        echo "üì¶ Installation des d√©pendances..."
        pip install --upgrade pip
        pip install -r requirements.txt
        echo "‚úÖ D√©pendances install√©es."
    else
        echo "‚ùå Le fichier requirements.txt est introuvable. Assurez-vous qu'il existe."
    fi
else
    echo "‚è© Installation des d√©pendances ignor√©e."
fi

# Lancement de Docker Compose
echo "----------------------------------------"
echo "üê≥ Lancement de Docker Compose"
echo "----------------------------------------"

# Initialisation d'Airflow avec Docker Compose
if confirm "Voulez-vous initialiser Airflow avec Docker Compose ?"; then
    docker compose up -d airflow-init
    echo "‚úÖ Airflow initialis√©."
else
    echo "‚è© Initialisation d'Airflow ignor√©e."
fi

# Lancer tous les services Docker Compose
if confirm "Souhaitez-vous d√©marrer les services Docker pour airflow ?"; then
    docker compose up -d
    echo "‚úÖ Services Docker Compose d√©marr√©s avec succ√®s."
else
    echo "‚è© D√©marrage des services ignor√©."
fi

if confirm "Souhaitez-vous r√©cup√©rer les donn√©es brutes (raws) ?"; then
    curl https://files.grouplens.org/datasets/movielens/ml-20m.zip --output datasets/ml-20m.zip
    unzip datasets/ml-20m.zip -d datasets/raw_files
    mv datasets/raw_files/ml-20m/* datasets/raw_files/
    rmdir datasets/raw_files/ml-20m/
    rm -f datasets/ml-20m.zip
    echo "‚úÖ Donn√©es r√©cup√©r√©es avec succ√®s."
else
    echo "‚è© R√©cup√©ration des donn√©es brutes ignor√©e."
fi

# Instructions finales
echo "----------------------------------------"
echo "üìÇ Instructions finales"
echo "----------------------------------------"
echo
echo "Pour activer l'environnement Python, utilisez :"
echo "  . .venv/bin/activate"
echo
echo "Ajoutez √©galement le chemin au PYTHONPATH avec :"
echo "  export PYTHONPATH=\$PYTHONPATH:`pwd`"
echo
echo "L'interface Airflow sera accessible √† l'adresse suivante : http://127.0.0.1:8080 dans environ 1 minute."
echo
echo "L'interface MLflow sera accessible √† l'adresse suivante : http://127.0.0.1:5000 dans environ 1 minute"
echo "----------------------------------------"

